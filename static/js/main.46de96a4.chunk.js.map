{"version":3,"sources":["components/ContactsList/ContactsList.module.css","components/Filter/Filter.module.css","components/Title/Title.module.css","components/AddContacts/AddContacts.module.css","components/ContactItem/ContactItem.jsx","components/ContactsList/ContactsList.jsx","components/AddContacts/AddContacts.jsx","components/Filter/Filter.jsx","components/Title/Title.jsx","App.js","reportWebVitals.js","index.js","components/ContactItem/ContactItem.module.css"],"names":["module","exports","ContactItem","id","name","phone","onDeleteContact","className","s","ContactList__text","type","ContactsList__Button","onClick","ContactsList","contacts","ContactList","map","ContactList__item","AddContacts","state","nameChange","e","setState","currentTarget","value","phoneChange","handleSubmit","preventDefault","props","onSubmit","AddContact__form","this","AddContact__input","AddContact__title","pattern","title","required","onChange","AddContact__button","Component","Filter","Filter__label","Title","App","filter","AddContact","contact","shortid","generate","find","elem","alert","prevState","deleteContact","contactId","filterContact","getVisibleContact","normalizedFilter","toLowerCase","includes","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","onFilterContact","visibleContacts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8IACAA,EAAOC,QAAU,CAAC,YAAc,kCAAkC,kBAAoB,wCAAwC,kBAAoB,wCAAwC,qBAAuB,6C,mBCAjND,EAAOC,QAAU,CAAC,cAAgB,gC,mBCAlCD,EAAOC,QAAU,CAAC,MAAQ,uB,kBCA1BD,EAAOC,QAAU,CAAC,iBAAmB,sCAAsC,mBAAqB,wCAAwC,kBAAoB,uCAAuC,kBAAoB,yC,qLCkBxMC,EAfK,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,GAAIC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,gBACtC,OACE,qCACE,mBAAGC,UAAWC,IAAEC,kBAAhB,SAAoCL,IACpC,mBAAGG,UAAWC,IAAEC,kBAAhB,SAAoCJ,IACpC,wBACEK,KAAK,SACLH,UAAWC,IAAEG,qBACbC,QAAS,kBAAMN,EAAgBH,IAHjC,wBCcSU,EAlBM,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUR,EAAsB,EAAtBA,gBAChC,OACE,oBAAIC,UAAWC,IAAEO,YAAjB,SACGD,EAASE,KAAI,YAA0B,IAAvBb,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACzB,OACE,oBAAaE,UAAWC,IAAES,kBAA1B,SACE,cAAC,EAAD,CACEd,GAAIA,EACJC,KAAMA,EACNC,MAAOA,EACPC,gBAAiBA,KALZH,S,gBC6DJe,E,4MA5DXC,MAAQ,CACJf,KAAM,GACNC,MAAO,I,EAGXe,WAAa,SAAAC,GACT,EAAKC,SAAS,CAAClB,KAAKiB,EAAEE,cAAcC,S,EAExCC,YAAc,SAAAJ,GACV,EAAKC,SAAS,CAACjB,MAAMgB,EAAEE,cAAcC,S,EAEzCE,aAAe,SAAAL,GACXA,EAAEM,iBACF,EAAKC,MAAMC,SAAS,EAAKV,OACzB,EAAKG,SAAS,CAAClB,KAAK,GAAGC,MAAM,M,4CAIrC,WACI,OAEI,uBAAME,UAAWC,IAAEsB,iBAAkBD,SAAUE,KAAKL,aAApD,UACI,qBAAKnB,UAAWC,IAAEwB,kBAAlB,SACI,sCAAS,mBAAGzB,UAAWC,IAAEyB,kBAAhB,kBACP,uBACFvB,KAAK,OACLN,KAAK,OACL8B,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRZ,MAAOO,KAAKZ,MAAMf,KAClBiC,SAAUN,KAAKX,kBAMnB,qBAAKb,UAAWC,IAAEwB,kBAAlB,SAEM,sCAAS,mBAAGzB,UAAWC,IAAEyB,kBAAhB,oBACf,uBACIvB,KAAK,MACLN,KAAK,SACL8B,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRZ,MAAOO,KAAKZ,MAAMd,MAClBgC,SAAUN,KAAKN,mBAKnB,wBAAQf,KAAK,SAASH,UAAWC,IAAE8B,mBAAnC,wB,GA3DcC,a,iBCOXC,EAPA,SAAC,GAAyB,IAAvBhB,EAAsB,EAAtBA,MAAOa,EAAe,EAAfA,SACvB,OACE,wBAAO9B,UAAWC,IAAEiC,cAApB,8FACkB,uBAAO/B,KAAK,OAAOc,MAAOA,EAAOa,SAAUA,Q,iBCAlDK,EAHD,SAAC,GAAe,IAAbP,EAAY,EAAZA,MACf,OAAO,oBAAI5B,UAAWc,IAAEqB,MAAjB,SAAyBP,K,iBC6EnBQ,E,4MApEbxB,MAAQ,CACNL,SAAU,GACV8B,OAAQ,I,EAEVC,WAAa,YAAsB,IAAnBzC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACdyC,EAAU,CACd3C,GAAI4C,IAAQC,WACZ5C,OACAC,SAGF,EAAKc,MAAML,SAASmC,MAAK,SAAAC,GAAI,OAAIA,EAAK9C,OAAS0C,EAAQ1C,QACnD+C,MAAM,GAAD,OAAIL,EAAQ1C,KAAZ,4BACL,EAAKkB,UAAS,SAAA8B,GAAS,MAAK,CAC1BtC,SAAS,CAAEgC,GAAH,mBAAeM,EAAUtC,gB,EAIzCuC,cAAgB,SAAAC,GACd,EAAKhC,UAAS,SAAA8B,GAAS,MAAK,CAC1BtC,SAAUsC,EAAUtC,SAAS8B,QAAO,SAAAE,GAAO,OAAIA,EAAQ3C,KAAOmD,U,EAGlEC,cAAgB,SAAAlC,GACd,EAAKC,SAAS,CAAEsB,OAAQvB,EAAEE,cAAcC,S,EAE1CgC,kBAAoB,WAClB,MAA6B,EAAKrC,MAA1BL,EAAR,EAAQA,SACF2C,EADN,EAAkBb,OACcc,cAChC,OAAO5C,EAAS8B,QAAO,SAAAE,GAAO,OAC5BA,EAAQ1C,KAAKsD,cAAcC,SAASF,O,uDAGxC,WACE,IAAM3C,EAAW8C,aAAaC,QAAQ,YAChCC,EAAiBC,KAAKC,MAAMlD,GAC9BgD,GACF/B,KAAKT,SAAS,CAAER,SAAUgD,M,gCAI9B,SAAmBG,EAAWb,GACxBrB,KAAKZ,MAAML,WAAasC,EAAUtC,UACpC8C,aAAaM,QAAQ,WAAYH,KAAKI,UAAUpC,KAAKZ,MAAML,a,oBAG/D,WACE,IAAQ8B,EAAWb,KAAKZ,MAAhByB,OACFtC,EAAkByB,KAAKsB,cACvBe,EAAkBrC,KAAKwB,cACvBc,EAAkBtC,KAAKyB,oBAE7B,OACE,qCACE,6HACA,cAAC,EAAD,CAAOrB,MAAO,gGACd,cAAC,EAAD,CAAaN,SAAUE,KAAKc,aAC5B,cAAC,EAAD,CAAQrB,MAAOoB,EAAQP,SAAU+B,IACjC,cAAC,EAAD,CAAOjC,MAAO,gGACd,cAAC,EAAD,CACErB,SAAUuD,EACV/D,gBAAiBA,W,GAnETiC,aCIH+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAtE,EAAOC,QAAU,CAAC,kBAAoB,uCAAuC,qBAAuB,6C","file":"static/js/main.46de96a4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactsList_ContactList__3VAoA\",\"ContactList__item\":\"ContactsList_ContactList__item__2mfRk\",\"ContactList__text\":\"ContactsList_ContactList__text__2PM0R\",\"ContactsList__Button\":\"ContactsList_ContactsList__Button__N-pl1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter__label\":\"Filter_Filter__label__1zfZ7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Title\":\"Title_Title__3cQPx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AddContact__form\":\"AddContacts_AddContact__form__3eLEx\",\"AddContact__button\":\"AddContacts_AddContact__button__3GoOL\",\"AddContact__input\":\"AddContacts_AddContact__input__zqyaE\",\"AddContact__title\":\"AddContacts_AddContact__title__1k8G-\"};","import React from 'react';\nimport s from './ContactItem.module.css';\nimport PropTypes from 'prop-types';\n\nconst ContactItem = ({ id, name, phone, onDeleteContact }) => {\n  return (\n    <>\n      <p className={s.ContactList__text}>{name}</p>\n      <p className={s.ContactList__text}>{phone}</p>\n      <button\n        type=\"button\"\n        className={s.ContactsList__Button}\n        onClick={() => onDeleteContact(id)}\n      >\n        Delete\n      </button>\n    </>\n  );\n};\nexport default ContactItem;\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport s from './ContactsList.module.css';\nimport ContactItem from '../ContactItem/ContactItem';\nimport PropTypes from 'prop-types';\n\nconst ContactsList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul className={s.ContactList}>\n      {contacts.map(({ id, name, phone }) => {\n        return (\n          <li key={id} className={s.ContactList__item}>\n            <ContactItem\n              id={id}\n              name={name}\n              phone={phone}\n              onDeleteContact={onDeleteContact}\n            />\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\nexport default ContactsList;\nContactsList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import React, {Component}from \"react\";\nimport s from './AddContacts.module.css'\nimport PropTypes from 'prop-types';\n\nclass AddContacts extends Component {\n\n    static propTypes= {\n   name: PropTypes.string,\n   phone: PropTypes.string\n    }\n    \n    state = {\n        name: '',\n        phone: ''\n    }\n\n    nameChange = e => {\n        this.setState({name:e.currentTarget.value})\n    }\n    phoneChange = e => {\n        this.setState({phone:e.currentTarget.value})\n    }\n    handleSubmit = e => {\n        e.preventDefault()\n        this.props.onSubmit(this.state)\n        this.setState({name:'',phone:''})\n    }\n\n\nrender() {\n    return (\n\n        <form className={s.AddContact__form} onSubmit={this.handleSubmit}>\n            <div className={s.AddContact__input}>\n                <label > <p className={s.AddContact__title}>name</p>  \n                  <input\n                type=\"text\"\n                name=\"name\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                required\n                value={this.state.name}\n                onChange={this.nameChange}\n            />\n                </label>\n         </div>\n           \n            \n            <div className={s.AddContact__input}>\n             \n                  <label > <p className={s.AddContact__title}>number</p>  \n            <input\n                type=\"tel\"\n                name=\"number\"\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                required\n                value={this.state.phone}\n                onChange={this.phoneChange}\n            />\n              </label>\n            </div>\n       \n            <button type=\"submit\" className={s.AddContact__button}>Add</button>\n        \n        </form>\n\n    )\n}\n\n}\nexport default AddContacts\n\n\n","import React from 'react';\nimport s from './Filter.module.css';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label className={s.Filter__label}>\n      Фильтр по имени <input type=\"text\" value={value} onChange={onChange} />\n    </label>\n  );\n};\nexport default Filter;\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport e from './Title.module.css';\nimport PropTypes from 'prop-types';\n\nconst Title = ({ title }) => {\n  return <h3 className={e.Title}>{title}</h3>;\n};\nexport default Title;\nTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import React, { Component } from 'react';\nimport ContactsList from './components/ContactsList/ContactsList';\nimport AddContacts from './components/AddContacts/AddContacts';\nimport Filter from './components/Filter/Filter';\nimport Title from './components/Title/Title';\nimport shortid from 'shortid';\nimport PropTypes from 'prop-types';\n\nclass App extends Component {\n  static propTypes = {\n    contacts: PropTypes.array,\n    filter: PropTypes.string,\n  };\n\n  state = {\n    contacts: [],\n    filter: '',\n  };\n  AddContact = ({ name, phone }) => {\n    const contact = {\n      id: shortid.generate(),\n      name,\n      phone,\n    };\n\n    this.state.contacts.find(elem => elem.name === contact.name)\n      ? alert(`${contact.name} is already in contacts`)\n      : this.setState(prevState => ({\n          contacts: [contact, ...prevState.contacts],\n        }));\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n  filterContact = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n  getVisibleContact = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n  render() {\n    const { filter } = this.state;\n    const onDeleteContact = this.deleteContact;\n    const onFilterContact = this.filterContact;\n    const visibleContacts = this.getVisibleContact();\n\n    return (\n      <>\n        <h1>Телефонная книга</h1>\n        <Title title={'Добавить контакт'} />\n        <AddContacts onSubmit={this.AddContact} />\n        <Filter value={filter} onChange={onFilterContact} />\n        <Title title={'Список контактов'} />\n        <ContactsList\n          contacts={visibleContacts}\n          onDeleteContact={onDeleteContact}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList__text\":\"ContactItem_ContactList__text__2CJqZ\",\"ContactsList__Button\":\"ContactItem_ContactsList__Button__3iOen\"};"],"sourceRoot":""}