{"version":3,"sources":["components/Filter/Filter.module.css","components/Title/Title.module.css","components/AddContacts/AddContacts.module.css","components/ContactItem/ContactItem.jsx","components/ContactsList/ContactsList.jsx","components/AddContacts/AddContacts.jsx","components/Filter/Filter.jsx","components/Title/Title.jsx","App.js","reportWebVitals.js","index.js","components/ContactItem/ContactItem.module.css","components/ContactsList/ContactsList.module.css"],"names":["module","exports","ContactItem","id","name","phone","onDeleteContact","className","s","ContactList__text","type","ContactsList__Button","onClick","ContactsList","contacts","ContactList","map","ContactList__item","AddContacts","onSubmit","useState","setName","setPhone","AddContact__form","e","preventDefault","AddContact__input","AddContact__title","pattern","title","required","value","onChange","currentTarget","AddContact__button","Filter","Filter__label","Title","App","JSON","parse","window","localStorage","getItem","setContacts","filter","setFilter","useEffect","setItem","stringify","contact","shortid","generate","find","elem","alert","oldContacts","normalizedFilter","toLowerCase","includes","getVisibleContact","contactId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5810eb16.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter__label\":\"Filter_Filter__label__1zfZ7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Title\":\"Title_Title__3cQPx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AddContact__form\":\"AddContacts_AddContact__form__3eLEx\",\"AddContact__button\":\"AddContacts_AddContact__button__3GoOL\",\"AddContact__input\":\"AddContacts_AddContact__input__zqyaE\",\"AddContact__title\":\"AddContacts_AddContact__title__1k8G-\"};","import React from 'react';\nimport s from './ContactItem.module.css';\nimport PropTypes from 'prop-types';\n\nconst ContactItem = ({ id, name, phone, onDeleteContact }) => {\n  return (\n    <>\n      <p className={s.ContactList__text}>{name}</p>\n      <p className={s.ContactList__text}>{phone}</p>\n      <button\n        type=\"button\"\n        className={s.ContactsList__Button}\n        onClick={() => onDeleteContact(id)}\n      >\n        Delete\n      </button>\n    </>\n  );\n};\nexport default ContactItem;\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport s from './ContactsList.module.css';\nimport ContactItem from '../ContactItem/ContactItem';\nimport PropTypes from 'prop-types';\n\nconst ContactsList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul className={s.ContactList}>\n      {contacts.map(({ id, name, phone }) => {\n        return (\n          <li key={id} className={s.ContactList__item}>\n            <ContactItem\n              id={id}\n              name={name}\n              phone={phone}\n              onDeleteContact={onDeleteContact}\n            />\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\nexport default ContactsList;\nContactsList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import { useState } from 'react';\nimport s from './AddContacts.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function AddContacts({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n\n  const nameChange = e => {\n    setName(e.currentTarget.value);\n  };\n  const phoneChange = e => {\n    setPhone(e.currentTarget.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ name, phone });\n    setName('');\n    setPhone('');\n  };\n\n  return (\n    <form className={s.AddContact__form} onSubmit={handleSubmit}>\n      <div className={s.AddContact__input}>\n        <label>\n          {' '}\n          <p className={s.AddContact__title}>name</p>\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={name}\n            onChange={nameChange}\n          />\n        </label>\n      </div>\n\n      <div className={s.AddContact__input}>\n        <label>\n          {' '}\n          <p className={s.AddContact__title}>number</p>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={phone}\n            onChange={phoneChange}\n          />\n        </label>\n      </div>\n      <button type=\"submit\" className={s.AddContact__button}>\n        Add\n      </button>\n    </form>\n  );\n}\nAddContacts.propTypes = {\n  name: PropTypes.string,\n  phone: PropTypes.string,\n};\n","import React from 'react';\nimport s from './Filter.module.css';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label className={s.Filter__label}>\n      Фильтр по имени <input type=\"text\" value={value} onChange={onChange} />\n    </label>\n  );\n};\nexport default Filter;\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport e from './Title.module.css';\nimport PropTypes from 'prop-types';\n\nconst Title = ({ title }) => {\n  return <h3 className={e.Title}>{title}</h3>;\n};\nexport default Title;\nTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport ContactsList from './components/ContactsList/ContactsList';\nimport AddContacts from './components/AddContacts/AddContacts';\nimport Filter from './components/Filter/Filter';\nimport Title from './components/Title/Title';\nimport shortid from 'shortid';\nimport PropTypes from 'prop-types';\n\nexport default function App() {\n  const [contacts, setContacts] = useState(\n    JSON.parse(window.localStorage.getItem('contacts')) ?? [],\n  );\n  const [filter, setFilter] = useState('');\n  const addContact = ({ name, phone }) => {\n    const contact = {\n      id: shortid.generate(),\n      name,\n      phone,\n    };\n\n    contacts.find(elem => elem.name === contact.name)\n      ? alert(`${contact.name} is already in contacts`)\n      : setContacts(oldContacts => [contact, ...oldContacts]);\n  };\n\n  const deleteContact = contactId => {\n    setContacts(oldContacts => {\n      return oldContacts.filter(contact => contact.id !== contactId);\n    });\n  };\n  const filterContact = e => {\n    setFilter(e.currentTarget.value);\n  };\n  const getVisibleContact = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  return (\n    <>\n      <h1>Телефонная книга</h1>\n      <Title title={'Добавить контакт'} />\n      <AddContacts onSubmit={addContact} />\n      <Filter value={filter} onChange={filterContact} />\n      <Title title={'Список контактов'} />\n      <ContactsList\n        contacts={getVisibleContact()}\n        onDeleteContact={deleteContact}\n      />\n    </>\n  );\n}\nApp.propTypes = {\n  contacts: PropTypes.array,\n  filter: PropTypes.string,\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList__text\":\"ContactItem_ContactList__text__2CJqZ\",\"ContactsList__Button\":\"ContactItem_ContactsList__Button__3iOen\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactsList_ContactList__3VAoA\",\"ContactList__item\":\"ContactsList_ContactList__item__2mfRk\",\"ContactList__text\":\"ContactsList_ContactList__text__2PM0R\",\"ContactsList__Button\":\"ContactsList_ContactsList__Button__N-pl1\"};"],"sourceRoot":""}